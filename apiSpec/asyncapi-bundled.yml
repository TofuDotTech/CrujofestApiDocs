asyncapi: 2.5.0
info:
  title: Crujofest event-driven API
  version: '1.0'
  description: Event-driven architecture implemented with sockets for party features
servers:
  production:
    url: ws://crujofest.party/
    protocol: wss
channels:
  /:
    publish:
      description: Client to server events
      message:
        oneOf:
          - description: >-
              Leave the room associated to the party and disconnects the socket
              connection
            name: leaveParty
            payload:
              type: string
              description: Party code
          - description: Resume the currently playing song
            name: play
          - description: Pause the currently playing song
            name: pause
          - description: Play the next song in the queue
            name: next
          - description: Play the previous song in the queue
            name: previous
          - description: Get current song playing
            name: currentSong
            x-ack:
              args:
                type: object
                properties:
                  status:
                    type: number
                  currentSong:
                    nullable: true
                    $ref: '#/channels/~1/subscribe/message/oneOf/1/payload/oneOf/0'
          - description: Add a song to the queue
            name: querySong
            payload:
              type: string
              description: query
          - description: Get queue
            name: getQueue
            x-ack:
              args:
                type: object
                properties:
                  status:
                    type: number
                  previousQueue:
                    type: array
                    Description: JSON strings with the following schemas
                    items:
                      $ref: '#/channels/~1/subscribe/message/oneOf/0/payload'
                  nextQueue:
                    type: array
                    items:
                      $ref: '#/channels/~1/subscribe/message/oneOf/0/payload'
          - description: Notify the server that the currently playing song has changed
            name: songChanged
            payload:
              type: string
              description: Spotify song URI
          - description: >-
              Notify the server that the currently playing song was paused or
              resumed
            name: paused
            payload:
              type: boolean
              description: flag
    subscribe:
      description: Server to client events
      message:
        oneOf:
          - name: pushSong
            description: Notify client that a new song was pushed to the queue
            payload:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                      height:
                        type: number
                      width:
                        type: number
                track:
                  type: string
                artist:
                  type: string
                duration:
                  type: number
                songUrl:
                  type: string
                songUri:
                  type: string
                album:
                  type: string
          - name: changeSong
            description: Notify client to change currently playing song
            payload:
              oneOf:
                - type: object
                  properties:
                    success:
                      type: boolean
                    isPlaying:
                      type: boolean
                    album:
                      type: string
                    artwork:
                      type: array
                      items:
                        type: object
                        properties:
                          url:
                            type: string
                          height:
                            type: number
                          width:
                            type: number
                    artist:
                      type: string
                    explicit:
                      type: boolean
                    track:
                      type: string
                    url:
                      type: string
                    disabledControls:
                      type: object
                      properties:
                        interrupting_playback:
                          type: boolean
                          nullable: true
                        pausing:
                          type: boolean
                          nullable: true
                        resuming:
                          type: boolean
                          nullable: true
                        seeking:
                          type: boolean
                          nullable: true
                        skipping_next:
                          type: boolean
                          nullable: true
                        skipping_prev:
                          type: boolean
                          nullable: true
                        toggling_repeat_context:
                          type: boolean
                          nullable: true
                        toggling_shuffle:
                          type: boolean
                          nullable: true
                        toggling_repeat_track:
                          type: boolean
                          nullable: true
                        transferring_playback:
                          type: boolean
                          nullable: true
                - type: string
                  description: value of null
          - name: changePausedState
            description: >-
              Notify client that the currently playing song was paused or
              resumed
            payload:
              type: boolean
              description: flag
          - name: addUser
            description: Add user to party users list
            payload:
              type: object
              properties:
                username:
                  type: string
                displayName:
                  type: string
                roleId:
                  type: number
                photo:
                  type: string
                  nullable: true
                isGuest:
                  type: boolean
          - name: deleteUser
            description: Delete user from party users list
            payload:
              type: string
              description: username
          - name: deleteParty
            description: Notify client that the party was deleted
          - name: changeRole
            description: Notify to client that the user's role has changed
            payload:
              type: object
              properties:
                username:
                  type: string
                newRole:
                  type: number
    bindings:
      ws:
        query:
          type: object
          properties:
            auth:
              type: object
              properties:
                token:
                  type: string
        required:
          - auth
  /admin:
    publish:
      description: >-
        Client to server events for serverless function communication with
        socket server
      message:
        oneOf:
          - name: addUser
            description: Add user to party users list
            payload:
              type: string
              description: partyCode
          - name: deleteUser
            description: Delete user from users list
            payload:
              type: array
              prefixItems:
                - type: string
                  description: username
                - type: string
                  description: partyCode
          - name: deleteParty
            description: Delete party
            payload:
              type: string
              description: partyCode
          - name: roleChanged
            description: Notify that the user's role has changed
            payload:
              type: array
              prefixItems:
                - type: string
                  description: username
                - type: number
                  description: new role
                - type: string
                  description: partyCode
    bindings:
      ws:
        query:
          type: object
          properties:
            auth:
              type: object
              properties:
                token:
                  type: string
        required:
          - auth

